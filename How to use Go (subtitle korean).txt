c드라이브 아래 GO
ex) c:\

C:\Go\src/github.com/my_id/repository name
ex ) C:\Go\src\github.com\ani8570\learngo

package 이름 작성
ex ) package main

 //////////////////////////////////
fuc main() {
}
main.go는 컴파일 만을 위해 필요

"fmt" : package for formatting 
fmt.Println 대문자로 시작하는 함수는 export 가능

var name string = "Lee"

--> name := "Lee"
 //this is sameting. but if you declared outside func,
 you have to declarared like this "var name string = "Lee"

//////////////////////////////////////

Go can return more than one.
ex) totalLength, upperName := lenAndUpper("Lee")

두개를 반환하는데 하나만 있는 건 안됨. 
ex) totalLength := lenAndUpper("Lee")
이건 됨
ex) totalLength, _ := lenAndUpper("Lee")

함수가 밑과 같다
repeatMe("nico", "lynn", "dal", "marl", "flynn")

...string으로 여러개 받는다고 알림.
func repeatMe(words ...string) {
	fmt.Println(words)
}

/////////////////////

밑에 두 함수는 같음...
2번째 함수를 naked return이라 함 ( naked : 적나라한)
func lenAndUpper(name string) (int, string) {
	return len(name), strings.ToUpper(name)
}

func lenAndUpper2(name string) (lenght int, uppercase string) {
	lenght = len(name)
	uppercase = strings.ToUpper(name)
	return
}

함수 끝나고 실행시킬 것이 있으면 defer를 사용한다.
ex) 이미지 제거, 저장, api로 요청을 보낸다거나 등등
func lenAndUpper3(name string) (lenght int, uppercase string) {
	defer fmt.Println("I'm done")
	lenght = len(name)
	uppercase = strings.ToUpper(name)
	return
}

반복문 range ->index나옴
func superAdd(numbers ...int) int {
	fmt.Println(numbers)
	for index, number := range numbers {
		fmt.Println(index, number)
	}
	return 1
	//range
}
